from vkbottle.bot import Bot, Message
from commands import db, keyboards, vkc, cfg, qiwi


config = cfg.update()
token = config["token"]
bot = Bot(token)


# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
conn = db.connect_to_db()
cursor = conn.cursor()


# –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å"
async def start_handler(message: Message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    temp = "select exists(select * from users where user_id = " + str(message.from_id) + ")"
    cursor.execute(temp)
    is_user = cursor.fetchall()[0][0]
    if is_user == False:
        users_info = await bot.api.users.get(message.from_id)
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        try:
            temp = "insert into users (user_id, first_name, last_name) values (" + str(message.from_id) + ", '" + users_info[0].first_name + "', '" + users_info[0].last_name + "') on conflict do nothing"
            cursor.execute(temp)
            conn.commit()
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} {} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö".format(users_info[0].first_name, users_info[0].last_name))
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: " + str(e))
    await message.answer("–ü—Ä–∏–≤–µ—Ç, {}!".format(users_info[0].first_name), keyboard=keyboards.KEYBOARD_MAIN)


# –ö–Ω–æ–ø–∫–∞ "–ö—É—Ä—Å"
async def course_handler(message: Message):
    config = cfg.update()
    temp = "select location_id from users where user_id = " + str(message.from_id)
    cursor.execute(temp)
    location_id = cursor.fetchall()[0][0]

    if location_id == 0 or location_id == 10:
        # –ö–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞
        cursor.execute("select count(*) from users")
        user_count = cursor.fetchall()[0][0]
        
        # –ü—Ä–∏–≤–æ–¥–∏–º —á–∏—Å–ª–æ config["market_config"]["coin_amount"] –∫ —Ñ–æ—Ä–º–∞—Ç—É 1.000.000
        coin_amount = "{:,}".format(config["market_config"]["coin_amount"]).replace(",", ".")
        
        # –û–±—â–∏–π –æ–±–æ—Ä–æ—Ç VKC –∏ RUB
        cursor.execute("select * from transactions where status = 'success'")
        transactions = cursor.fetchall()
        vkc_turnover = 0
        rub_turnover = 0
        if len(transactions) != 0:
            for transaction in transactions:
                vkc_turnover += transaction[2]
                rub_turnover += transaction[3]
            vkc_turnover = "{:,}".format(vkc_turnover).replace(",", ".")
            rub_turnover /= 100
            rub_turnover = "{:,}".format(rub_turnover).replace(",", ".")
        
        # –û–±—â–µ–µ –∫–æ–ª-–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        transactions_count = len(transactions)

        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑–µ—Ä–≤ VKC
        reserve_vkc = vkc.get_shop_balance()
        reserve_vkc = "{:,}".format(reserve_vkc).replace(",", ".")  # –ü—Ä–∏–≤–æ–¥–∏–º —á–∏—Å–ª–æ reserve_vkc –∫ —Ñ–æ—Ä–º–∞—Ç—É 1.000.000

        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑–µ—Ä–≤ RUB
        reserve_rub = qiwi.get_balance()
        # –ü—Ä–∏–≤–æ–¥–∏–º —á–∏—Å–ª–æ reserve_rub –∫ —Ñ–æ—Ä–º–∞—Ç—É 1 000 000 –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ —Ü–µ–ª–æ–≥–æ –≤ –º–µ–Ω—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É
        reserve_rub = "{:,}".format(round(reserve_rub)).replace(",", " ")

        text = (
            "[ üìä ] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n" +

            "[ üë• ] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: " + str(user_count) + " \n\n" +

            "üì•–ü—Ä–æ–¥–∞–µ–º: " + str(config["market_config"]["buy_price"]/100) + " RUB –∑–∞ " + str(coin_amount) + " VkCoin\n" +
            "üì•–°–∫—É–ø–∞–µ–º: " + str(config["market_config"]["sell_price"]/100) + " RUB –∑–∞ " + str(coin_amount) + " VkCoin\n\n" +

            "üí∞–†–µ–∑–µ—Ä–≤: " + str(reserve_rub) + " RUB\n" +
            "üí∞–†–µ–∑–µ—Ä–≤ VKCOIN: " + str(reserve_vkc) + " VKC\n\n" +

            "–î—Ä—É–≥–∏–µ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã - " + str(config["market_config"]["seller"]) + "\n\n" +

            "üöÄ–û–±–æ—Ä–æ—Ç: " + str(vkc_turnover) + " VKCOIN (" + str(rub_turnover) + " RUB)\n" +
            "–í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: " + str(transactions_count) + "\n\n" +
            
            "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @id258714686")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
        temp = "select is_admin from users where user_id = " + str(message.from_id)
        cursor.execute(temp)
        is_admin = cursor.fetchall()[0][0]
        if is_admin == True:
            await message.answer(text, keyboard=keyboards.KEYBOARD_ADMIN)
        else:
            await message.answer(text, keyboard=keyboards.KEYBOARD_MAIN)


# –ö–Ω–æ–ø–∫–∞ "–û—Ç–∑—ã–≤—ã"
async def reviews_handler(message: Message):
    temp = "select location_id from users where user_id = " + str(message.from_id)
    cursor.execute(temp)
    location_id = cursor.fetchall()[0][0]
    if location_id == 0 or location_id == 10:
        text = (
            """
            üòß –°–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å –≤ –Ω–∞—à–µ–π —á–µ—Å—Ç–Ω–æ—Å—Ç–∏?
            –¢–æ–≥–¥–∞ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –æ—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤!
            - https://vk.com/topic-216221455_49070217
            """)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
        temp = "select is_admin from users where user_id = " + str(message.from_id)
        cursor.execute(temp)
        is_admin = cursor.fetchall()[0][0]
        if is_admin == True:
            await message.answer(text, keyboard=keyboards.KEYBOARD_ADMIN)
        else:
            await message.answer(text, keyboard=keyboards.KEYBOARD_MAIN)


# –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Ñ–∏–ª—å"
async def profile_handler(message: Message):
    temp = "select location_id from users where user_id = " + str(message.from_id)
    cursor.execute(temp)
    location_id = cursor.fetchall()[0][0]
    if location_id == 0 or location_id == 10:
        users_info = await bot.api.users.get(message.from_id)
        # select sum(vkc_amount) from transactions where user_id = 216738936 and type = 'buy' and status = 'success';
        temp = "select sum(vkc_amount) from transactions where user_id = " + str(message.from_id) + " and type = 'buy' and status = 'success'"
        cursor.execute(temp)
        vkc_buy = cursor.fetchall()[0][0]
        if vkc_buy == None:
            vkc_buy = 0
        else:
            # –ü—Ä–∏–≤–æ–¥–∏–º —á–∏—Å–ª–æ vkc_buy –∫ —Ñ–æ—Ä–º–∞—Ç—É 1.000.000
            vkc_buy = "{:,}".format(vkc_buy).replace(",", ".")
        # select sum(vkc_amount) from transactions where user_id = 216738936 and type = 'sell' and status = 'success';
        temp = "select sum(vkc_amount) from transactions where user_id = " + str(message.from_id) + " and type = 'sell' and status = 'success'"
        cursor.execute(temp)
        vkc_sell = cursor.fetchall()[0][0]
        if vkc_sell == None:
            vkc_sell = 0
        else:
            # –ü—Ä–∏–≤–æ–¥–∏–º —á–∏—Å–ª–æ vkc_sell –∫ —Ñ–æ—Ä–º–∞—Ç—É 1.000.000
            vkc_sell = "{:,}".format(vkc_sell).replace(",", ".")
        # select count(*) from transactions where user_id = 216738936 and status = 'success';
        temp = "select count(*) from transactions where user_id = " + str(message.from_id) + " and status = 'success'"
        cursor.execute(temp)
        transaction_count = cursor.fetchall()[0][0]
        # qiwi number
        temp = "select qiwi from users where user_id = " + str(message.from_id)
        cursor.execute(temp)
        qiwi = cursor.fetchall()[0][0]
        text = (
            "[ üí∞ ] –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n" +
            "[ ü§ë ] –í—Å–µ–≥–æ –≤—ã –∫—É–ø–∏–ª–∏: " + str(vkc_buy) + " VKCoin\n" + 
            "[ ü§ë ] –í—Å–µ–≥–æ –≤—ã –ø—Ä–æ–¥–∞–ª–∏: " + str(vkc_sell) + " VKCoin\n\n" +
            "–°–¥–µ–ª–æ–∫: " + str(transaction_count) + "\n" +
            "Qiwi: "
        )
        if qiwi == None:
            text += "–ù–µ —É–∫–∞–∑–∞–Ω"
        else:
            text += "+" + str(qiwi)
        temp = "update users set location_id = 5 where user_id = " + str(message.from_id)
        cursor.execute(temp)
        conn.commit()
        await message.answer(text, keyboard=keyboards.KEYBOARD_PROFILE)


# –ö–Ω–æ–ø–∫–∞ "–ö—É–ø–∏—Ç—å VKC"
async def buy_handler(message: Message):
    config = cfg.update()
    temp = "select location_id from users where user_id = " + str(message.from_id)
    cursor.execute(temp)
    location_id = cursor.fetchall()[0][0]
    if location_id == 0 or location_id == 10:
        if config["market_config"]["buy_is_enabled"] == True:
            temp = "update users set location_id = 1 where user_id = " + str(message.from_id)
            cursor.execute(temp)
            conn.commit()
            await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å", keyboard=keyboards.update_keyboard_buy())
        else:
            await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–∫—É–ø–∫–∞ VKCoin –æ—Ç–∫–ª—é—á–µ–Ω–∞")


# –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–∞—Ç—å VKC"
async def sell_handler(message: Message):
    config = cfg.update()
    temp = "select location_id from users where user_id = " + str(message.from_id)
    cursor.execute(temp)
    location_id = cursor.fetchall()[0][0]
    if location_id == 0 or location_id == 10:
        if config["market_config"]["sell_is_enabled"] == True:
            temp = "update users set location_id = 2 where user_id = " + str(message.from_id)
            cursor.execute(temp)
            conn.commit()
            await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å", keyboard=keyboards.update_keyboard_sell(message.from_id))
        else:
            await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–¥–∞–∂–∞ VKCoin –æ—Ç–∫–ª—é—á–µ–Ω–∞")


# –ö–Ω–æ–ø–∫–∞ "–ê–¥–º–∏–Ω–∫–∞"
async def admin_handler(message: Message):
    temp = "select location_id from users where user_id = " + str(message.from_id)
    cursor.execute(temp)
    location_id = cursor.fetchall()[0][0]
    if location_id == 10:
        temp = "select is_admin from users where user_id = " + str(message.from_id) + ";"
        cursor.execute(temp)
    
        is_admin = cursor.fetchall()[0][0]
        if is_admin == True:

            temp = "update users set location_id = " + str(11) + " where user_id = " + str(message.from_id)
            cursor.execute(temp)
            conn.commit()

            await message.answer("–ê–¥–º–∏–Ω–∫–∞", keyboard=keyboards.update_keyboard_admin_panel())


# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
async def back_handler(message: Message):
    temp = "select location_id from users where user_id = " + str(message.from_id)
    cursor.execute(temp)
    location_id = cursor.fetchall()[0][0]
    if location_id == 1 or location_id == 2 or location_id == 5 or location_id == 6 or (location_id >= 11 and location_id <= 15):
        temp = "select is_admin from users where user_id = " + str(message.from_id)
        cursor.execute(temp)
        is_admin = cursor.fetchall()[0][0]
        if is_admin == 1:
            await message.answer("–í—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!", keyboard=keyboards.KEYBOARD_ADMIN)
            temp = "update users set location_id = 10 where user_id = " + str(message.from_id)
        else:
            await message.answer("–í—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!", keyboard=keyboards.KEYBOARD_MAIN)
            temp = "update users set location_id = 0 where user_id = " + str(message.from_id)
        cursor.execute(temp)
        conn.commit()


# –ö–Ω–æ–ø–∫–∞ "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å QIWI"
async def qiwi_handler(message: Message):
    temp = "select location_id from users where user_id = " + str(message.from_id)
    cursor.execute(temp)
    location_id = cursor.fetchall()[0][0]
    if location_id == 5:
        temp = "update users set location_id = 6 where user_id = " + str(message.from_id)
        cursor.execute(temp)
        conn.commit()
        text = "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä QIWI, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –¥–µ–Ω—å–≥–∏"
        await message.answer(text, keyboard=keyboards.KEYBOARD_BACK)


# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ QIWI
async def qiwi_config_handler(message: Message):
    try:
        text = message.text
        # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã, —Å–∫–æ–±–∫–∏ –∏ —Ç–∏—Ä–µ
        text = text.replace(" ", "")
        text = text.replace("(", "")
        text = text.replace(")", "")
        text = text.replace("-", "")
        qiwi_number = "7"
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —è–≤–ª—è–µ—Ç—Å—è –Ω–æ–º–µ—Ä–æ–º QIWI
        if text[0] == "+" and text[1] == "7" and len(text) == 12:
            for i in range(2, 12):
                if text[i].isdigit():
                    qiwi_number += text[i]
                else:
                    await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ QIWI")
                    return
        elif text[0] == "7" and len(text) == 11:
            for i in range(1, 11):
                if text[i].isdigit():
                    qiwi_number += text[i]
                else:
                    await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ QIWI")
                    return
        elif text[0] == "8" and len(text) == 11:
            for i in range(1, 11):
                if text[i].isdigit():
                    qiwi_number += text[i]
                else:
                    await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ QIWI")
                    return
        else:
            await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ QIWI")
            return

        temp = "update users set qiwi = " + str(qiwi_number) + " where user_id = " + str(message.from_id)
        cursor.execute(temp)
        conn.commit()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
        temp = "select is_admin from users where user_id = " + str(message.from_id)
        cursor.execute(temp)
        is_admin = cursor.fetchall()[0][0]
        if is_admin == 1:
            await message.answer("–ù–æ–º–µ—Ä QIWI —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ +" + str(qiwi_number), keyboard=keyboards.KEYBOARD_ADMIN)
            temp = "update users set location_id = 10 where user_id = " + str(message.from_id)
        else:
            await message.answer("–ù–æ–º–µ—Ä QIWI —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ +" + str(qiwi_number), keyboard=keyboards.KEYBOARD_MAIN)
            temp = "update users set location_id = 0 where user_id = " + str(message.from_id)
        cursor.execute(temp)
        conn.commit()
    except:
        await message.answer("–ù–æ–º–µ—Ä QIWI –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ —Ü–∏—Ñ—Ä!")