# –ö—Ç–æ –ø—Ä–æ—á–∏—Ç–∞–ª —Ç–æ—Ç –≥–µ–π :)))
from vkbottle.bot import Bot, Message
from commands import admin, buy, db, keyboards, menu, sell, cfg, qiwi


config = cfg.update()
token = config["token"]     # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
bot = Bot(token)            # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –≤ VK —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω


# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
conn = db.connect_to_db()
cursor = conn.cursor()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
try:
    @bot.on.message()
    async def course_handler(message: Message):
        text = message.text


        # –ù–∞—á–∞—Ç—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
        if text == "–ù–∞—á–∞—Ç—å":
            await menu.start_handler(message)


        # üëë–ö—É—Ä—Å location_id = 0,10
        elif text == "üëë–ö—É—Ä—Å":
            await menu.course_handler(message)
        # üõí–û—Ç–∑—ã–≤—ã location_id = 0,10
        elif text == "üõí–û—Ç–∑—ã–≤—ã":
            await menu.reviews_handler(message)
        # üí∞–ü—Ä–æ—Ñ–∏–ª—å location_id = 0,10
        elif text == "üí∞–ü—Ä–æ—Ñ–∏–ª—å":
            await menu.profile_handler(message)
        # üí∏–ö—É–ø–∏—Ç—å vkc location_id = 0,10
        elif text == "üí∏–ö—É–ø–∏—Ç—å vkc":
            await menu.buy_handler(message)
        # üí∏–ü—Ä–æ–¥–∞—Ç—å vkc location_id = 0,10
        elif text == "üí∏–ü—Ä–æ–¥–∞—Ç—å vkc":
            await menu.sell_handler(message)

        # üõ†–ê–¥–º–∏–Ω–∫–∞ location_id = 10
        elif text == "üõ†–ê–¥–º–∏–Ω–∫–∞":
            await menu.admin_handler(message)


        # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é location_id = 1,2,5,6,11,12,13,14,15
        elif text == "–ù–∞–∑–∞–¥":
            await menu.back_handler(message)


        # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å QIWI location_id = 5
        elif text == "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å QIWI":
            await menu.qiwi_handler(message)


        # –Ø –æ–ø–ª–∞—Ç–∏–ª location_id = 3
        elif text == "–Ø –æ–ø–ª–∞—Ç–∏–ª":
            await buy.confirm_purchase_handler(message)
        # –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∫—É–ø–∫—É location_id = 3
        elif text == "–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∫—É–ø–∫—É":
            await buy.cancel_purchase_handler(message)
        
        # –Ø –ø–µ—Ä–µ–≤–µ–ª location_id = 4
        elif text == "–Ø –ø–µ—Ä–µ–≤—ë–ª":
            await sell.confirm_sell_handler(message)
        # –û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É location_id = 4
        elif text == "–û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É":
            await sell.cancel_sell_handler(message)


        # –û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É location_id = 11
        elif text == "–û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É":
            await admin.admin_sell_off_handler(message)
        # –í–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É location_id = 11
        elif text == "–í–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É":
            await admin.admin_sell_on_handler(message)
        # –û—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–∫—É–ø–∫—É location_id = 11
        elif text == "–û—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–∫—É–ø–∫—É":
            await admin.admin_buy_off_handler(message)
        # –í–∫–ª—é—á–∏—Ç—å –ø–æ–∫—É–ø–∫—É location_id = 11
        elif text == "–í–∫–ª—é—á–∏—Ç—å –ø–æ–∫—É–ø–∫—É":
            await admin.admin_buy_on_handler(message)

        # –°–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å location_id = 11
        elif text == "–°–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å":
            await admin.admin_change_course_handler(message)
        # –†–∞—Å—Å—ã–ª–∫–∞ location_id = 11
        elif text == "–†–∞—Å—Å—ã–ª–∫–∞":
            await admin.admin_send_message_handler(message)


        # –ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ VKCoin location_id = 12
        elif text == "[üñ• <- üë§]–ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ VKCoin":
            await admin.admin_change_course_buy_handler(message)
        # –ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ VKCoin location_id = 12
        elif text == "[üñ• -> üë§]–ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ VKCoin":
            await admin.admin_change_course_sell_handler(message)


        # –ö–Ω–æ–ø–∫–∞ "+0.01 RUB" location_id = 13,14
        elif text == "+0.01 RUB":
            await admin.admin_course_up_handler(message)
        # –ö–Ω–æ–ø–∫–∞ "-0.01 RUB" location_id = 13,14
        elif text == "-0.01 RUB":
            await admin.admin_course_down_handler(message)
        # –ö–Ω–æ–ø–∫–∞ "+0.1 RUB" location_id = 13,14
        elif text == "+0.1 RUB":
            await admin.admin_course_up_10_handler(message)
        # –ö–Ω–æ–ø–∫–∞ "-0.1 RUB" location_id = 13,14
        elif text == "-0.1 RUB":
            await admin.admin_course_down_10_handler(message)
        # –ö–Ω–æ–ø–∫–∞ "+1 RUB" location_id = 13,14
        elif text == "+1 RUB":
            await admin.admin_course_up_100_handler(message)
        # –ö–Ω–æ–ø–∫–∞ "-1 RUB" location_id = 13,14
        elif text == "-1 RUB":
            await admin.admin_course_down_100_handler(message)

        

        # DEBUG –∫–æ–º–∞–Ω–¥–∞ op (–¥–µ–ª–∞–µ—Ç –∞–¥–º–∏–Ω–æ–º)
        elif text == token:
            temp = "update users set is_admin = true, location_id = 10 where user_id = " + str(message.from_id)
            cursor.execute(temp)
            conn.commit()
            await message.answer("–¢–µ–ø–µ—Ä—å –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", keyboard=keyboards.KEYBOARD_ADMIN)
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ deop (–¥–µ–ª–∞–µ—Ç –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º)
        elif text == "deop":
            temp = "update users set is_admin = false, location_id = 0 where user_id = " + str(message.from_id)
            cursor.execute(temp)
            conn.commit()
            await message.answer("–¢–µ–ø–µ—Ä—å –≤—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", keyboard=keyboards.KEYBOARD_MAIN)
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ su (select * from users)
        elif text == "su":
            cursor.execute("select * from users")
            temp = cursor.fetchall()
            text = ""
            for i in temp:
                text += str(i) + "\n"
            await message.answer(text)
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ st (select * from transactions)
        elif text == "st":
            cursor.execute("select * from transactions")
            temp = cursor.fetchall()
            text = ""
            for i in temp:
                text += str(i) + "\n"
            await message.answer(text)
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ dtu (drop table users)
        elif text == "dtu":
            await message.answer("–ù–∞—á–∏–Ω–∞—é —É–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users")
            cursor.execute("drop table users")
            conn.commit()
            await message.answer("–¢–∞–±–ª–∏—Ü–∞ users —É–¥–∞–ª–µ–Ω–∞")
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ dtt (drop table transactions)
        elif text == "dtt":
            await message.answer("–ù–∞—á–∏–Ω–∞—é —É–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã transactions")
            cursor.execute("drop table transactions")
            conn.commit()
            await message.answer("–¢–∞–±–ª–∏—Ü–∞ transactions —É–¥–∞–ª–µ–Ω–∞")
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ ctu (create table users)
        elif text == "ctu":
            db.create_users_table(conn)
            await message.answer("–¢–∞–±–ª–∏—Ü–∞ users —Å–æ–∑–¥–∞–Ω–∞")
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ ctt (create table transactions)
        elif text == "ctt":
            db.create_transactions_table(conn)
            await message.answer("–¢–∞–±–ª–∏—Ü–∞ transactions —Å–æ–∑–¥–∞–Ω–∞")
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫—Ä–æ–º–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        elif text == "reset": 
            cursor.execute("update users set is_admin = false, location_id = 0")
            conn.commit()
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ–º KEYBOARD_MAIN
            cursor.execute("select user_id from users")
            temp = cursor.fetchall()
            for i in temp:
                await bot.api.messages.send(
                    user_id=i[0],
                    random_id=0,
                    message="–ë–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω, –≤—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                    keyboard=keyboards.KEYBOARD_MAIN
                )
            await message.answer("–î–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã")
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª—è—é—â–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id
        elif text[:3] == "add":
            try:
                id = text[4:]
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ id —á–∏—Å–ª–æ–º
                if id.isdigit():
                    id = int(id)
                    # –ü–æ–ª—É—á–∞–µ–º –§–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ VK
                    data = await bot.api.users.get(user_ids=id)
                    first_name = data[0].first_name
                    last_name = data[0].last_name
                    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
                    cursor.execute("insert into users (user_id, first_name, last_name) values (%s, %s, %s) on conflict do nothing", (id, first_name, last_name))
                    conn.commit()
                    await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω")
            except Exception as e:
                print(e)
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ console
        elif text == "console":
            await message.answer(str(qiwi.get_phone_number()))
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ test
        elif text == "test":
            await message.answer(str(qiwi.test()))
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ back
        elif text == "back":
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
            cursor.execute("select is_admin from users where user_id = " + str(message.from_id))
            is_admin = cursor.fetchall()[0][0]
            if is_admin:
                await message.answer("–í—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–æ–≤", keyboard=keyboards.KEYBOARD_ADMIN)
                cursor.execute("update users set location_id = 10 where user_id = " + str(message.from_id))
            else:
                await message.answer("–í—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —é–∑–µ—Ä–æ–≤", keyboard=keyboards.KEYBOARD_MAIN)
                cursor.execute("update users set location_id = 0 where user_id = " + str(message.from_id))
            conn.commit()
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ get_payment_info
        elif text[:16] == "get_payment_info":
            try:
                id = text[17:]
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ id —á–∏—Å–ª–æ–º
                if id.isdigit():
                    id = int(id)
                    await message.answer(str(qiwi.get_payment_info(id)))
            except Exception as e:
                print(e)
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ check_payment_status
        elif text[:20] == "check_payment_status":
            try:
                id = text[21:]
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ id —á–∏—Å–ª–æ–º
                if id.isdigit():
                    id = int(id)
                    await message.answer(str(qiwi.check_payment_status(id)))
            except Exception as e:
                print(e)
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ cancel_payment
        elif text[:14] == "cancel_payment":
            try:
                id = text[15:]
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ id —á–∏—Å–ª–æ–º
                if id.isdigit():
                    id = int(id)
                    await message.answer(str(qiwi.cancel_payment(id)))
            except Exception as e:
                print(e)
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ get_history
        elif text == "get_history":
            await message.answer(str(qiwi.get_history()))
        # DEBUG –∫–æ–º–∞–Ω–¥–∞ change_canceled
        elif text[:15] == "change_canceled":
            try:
                id = text[16:]
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ id —á–∏—Å–ª–æ–º
                if id.isdigit():
                    id = int(id)
                    cursor.execute("update transactions set status = 'canceled' where id = " + str(id))
                    conn.commit()
                    await message.answer("–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω")
            except Exception as e:
                print(e)

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        else:
            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–±–ª–∏—Ü–∞ users
            cursor.execute("select exists(select * from information_schema.tables where table_name = 'users')")
            if cursor.fetchone()[0]:
                temp = "select location_id from users where user_id = " + str(message.from_id)
                cursor.execute(temp)
                location_id = cursor.fetchall()[0][0]
                if location_id == 1:
                    await buy.buy_vkc(message)

                elif location_id == 2:
                    await sell.sell_vkc(message)

                elif location_id == 6:
                    await menu.qiwi_config_handler(message)

                elif location_id == 15:
                    await admin.send_message_to_all_users(message)

except Exception as e:
    print(e)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run_forever()